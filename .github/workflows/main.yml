name: Run steam2sqlite

on:
  schedule:
    - cron: "0 * * * *" # every hour

  # Allows running this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2.3.0
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # load cached venv if cache exists
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: run the script
        run: |
          source .venv/bin/activate
          python steam2sqlite/main.py --limit 50
          git pull
        shell: bash

      - name: Push to main branch
        uses: Automattic/action-commit-to-branch@master
        with:
          branch: "main"
          commit_message: "GitHub action database update"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Required
